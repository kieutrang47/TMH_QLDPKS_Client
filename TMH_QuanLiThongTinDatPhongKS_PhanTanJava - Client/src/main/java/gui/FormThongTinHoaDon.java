/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package gui;

import java.awt.BorderLayout;
import java.awt.Component;
import java.awt.Desktop;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.print.PageFormat;
import java.awt.print.Printable;
import java.awt.print.PrinterException;
import java.awt.print.PrinterJob;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.rmi.RemoteException;
import java.sql.Date;
import java.sql.Time;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.time.Period;
import java.time.ZoneId;
import java.util.List;
import java.util.Map;

import javax.swing.ButtonGroup;
import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JProgressBar;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

import client.RMIClient;
import com.itextpdf.text.Document;
import com.itextpdf.text.Element;
import com.itextpdf.text.Font;
import com.itextpdf.text.FontFactory;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.Rectangle;
import com.itextpdf.text.TabSettings;
import com.itextpdf.text.pdf.BaseFont;
import com.itextpdf.text.pdf.ColumnText;
import com.itextpdf.text.pdf.PdfContentByte;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfPageEventHelper;
import com.itextpdf.text.pdf.PdfWriter;
import com.itextpdf.text.pdf.draw.VerticalPositionMark;
import com.k33ptoo.components.KButton;
import com.itextpdf.text.Chunk;

import com.microsoft.sqlserver.jdbc.SQLServerException;
import com.raven.datechooser.Button;


import entity.DoAnThucUong;
import entity.HoaDon;
import rmi.HoaDonService;

/**
 *
 * @author lehoann
 */
public class FormThongTinHoaDon extends javax.swing.JFrame {
    private RMIClient rmiClient;
    private HoaDonService hoaDonService;
    private HoaDon hoaDon= new HoaDon();
	private Map<String, Object> thongTin;
	private List<Map<String, Object>> danhSachDichVu;


    /**
     * Creates new form ThongTinHoaDon
     */
    public FormThongTinHoaDon() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setResizable(true);
        this.setSize(700, 800);
        this.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);

        try {
            rmiClient = new RMIClient();
            hoaDonService = rmiClient.getHoaDonService();
            System.out.println("Connected to RMI server successfully!");
        } catch (Exception e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error connecting to RMI server: " + e.getMessage(),
                    "Connection Error", JOptionPane.ERROR_MESSAGE);
        }
     	System.out.println("Connected !!!");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroupGT = new javax.swing.ButtonGroup();
        jProgressBar1 = new javax.swing.JProgressBar();
        jPanel2 = new javax.swing.JPanel();
        pCenter = new javax.swing.JPanel();
        pTTKHvsDV = new javax.swing.JPanel();
        pTTKH = new javax.swing.JPanel();
        lblLoaiKH = new javax.swing.JLabel();
        lblGiaTien = new javax.swing.JLabel();
        lblTenKhachHang = new javax.swing.JLabel();
        lblSoCCCD = new javax.swing.JLabel();
        lblTTSoCCCD = new javax.swing.JLabel();
        lblTTTenKH = new javax.swing.JLabel();
        lblTTMaHD = new javax.swing.JLabel();
        lblTTLoaiKH = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        lblGioTraPhong1 = new javax.swing.JLabel();
        jtxtSoLuongN = new javax.swing.JTextField();
        jtxtNgayTraPhong = new javax.swing.JTextField();
        lblNgayNhanPhong = new javax.swing.JLabel();
        jtxtNgayNhanPhong = new javax.swing.JTextField();
        lblGioNhanPhong1 = new javax.swing.JLabel();
        jtxtGioNhanPhong = new javax.swing.JTextField();
        lblNgayTraPhong = new javax.swing.JLabel();
        jtxtGioTraPhong = new javax.swing.JTextField();
        lblSoLuongNguoi = new javax.swing.JLabel();
        lblSoGio = new javax.swing.JLabel();
        jtxtSoGio = new javax.swing.JTextField();
        lblMaHD = new javax.swing.JLabel();
        lblLoaiPhong = new javax.swing.JLabel();
        lblTTLoaiP = new javax.swing.JLabel();
        lblTTGiaTien = new javax.swing.JLabel();
        pTTDV = new javax.swing.JPanel();
        lblThemSanPham = new javax.swing.JLabel();
        btnThemSanPham = new com.raven.datechooser.Button();
        lblSoLuongSP = new javax.swing.JLabel();
        jComboBoxSLSP = new javax.swing.JComboBox<>();
        jScrSP = new javax.swing.JScrollPane();
        jtableSP = new javax.swing.JTable();
        jComboBoxSP = new javax.swing.JComboBox<>();
        btnXoaSanPham = new com.raven.datechooser.Button();
        pThanhToan = new javax.swing.JPanel();
        lblPhuThu = new javax.swing.JLabel();
        jtxtGiaTien = new javax.swing.JTextField();
        jComboBoxPPT = new javax.swing.JComboBox<>();
        lblThanhToan = new javax.swing.JLabel();
        lblTienTe = new javax.swing.JLabel();
        lblPhuongThucTra = new javax.swing.JLabel();
        lblTTThanhToan = new javax.swing.JLabel();
        lblGhiChu = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaGhiChu = new javax.swing.JTextArea();
        lblTraTruoc = new javax.swing.JLabel();
        lblTTTraTruoc = new javax.swing.JLabel();
        lblTienTe1 = new javax.swing.JLabel();
        lblTongTien = new javax.swing.JLabel();
        lblTTTongTien = new javax.swing.JLabel();
        lblTienTe2 = new javax.swing.JLabel();
        pSouth = new javax.swing.JPanel();
        boxButton = new javax.swing.JPanel();
        btnTraPhong = new com.k33ptoo.components.KButton();
        btnHuyBo = new com.k33ptoo.components.KButton();
        jComboInHoaDon = new javax.swing.JComboBox<>();
        lblKieuIn = new javax.swing.JLabel();
        lblNgayLapHoaDon = new javax.swing.JLabel();
        jtxtNgayLapHoaDon = new javax.swing.JTextField();

        
     // Đặt tất cả các JTextField thành Read-only
        jtxtSoLuongN.setEditable(false);
        jtxtNgayTraPhong.setEditable(false);
        jtxtNgayNhanPhong.setEditable(false);
        jtxtGioNhanPhong.setEditable(false);
        jtxtGioTraPhong.setEditable(false);
        jtxtSoGio.setEditable(false);
        jtxtGiaTien.setEditable(false);
           jtxtNgayLapHoaDon.setEditable(false);

        // Đặt tất cả các JComboBox thành Read-only
        jComboBoxSLSP.setEnabled(false);
        jComboBoxSP.setEnabled(false);
        jComboBoxPPT.setEnabled(false);
        jComboInHoaDon.setEnabled(false);

        // Các nút khác ngoại trừ btnIn
        btnThemSanPham.setEnabled(false);
       

        // Nếu có bảng jtableSP, chỉ cho phép xem dữ liệu mà không cho sửa
        jtableSP.setEnabled(false);


        setPreferredSize(new java.awt.Dimension(700, 613));
        setLayout(new java.awt.BorderLayout());

        jPanel2.setMinimumSize(new java.awt.Dimension(640, 680));
        jPanel2.setPreferredSize(new java.awt.Dimension(640, 680));
        jPanel2.setLayout(new java.awt.BorderLayout());

        pCenter.setBackground(new java.awt.Color(227, 227, 227));
        pCenter.setPreferredSize(new java.awt.Dimension(671, 729));
        pCenter.setLayout(new java.awt.BorderLayout());

        pTTKHvsDV.setPreferredSize(new java.awt.Dimension(671, 430));
        pTTKHvsDV.setLayout(new java.awt.BorderLayout());

        pTTKH.setBackground(new java.awt.Color(227, 227, 227));
        pTTKH.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(""), "Thông Tin Hóa Đơn", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 14))); // NOI18N
        pTTKH.setPreferredSize(new java.awt.Dimension(671, 280));
        pTTKH.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblLoaiKH.setText("Loại Khách Hàng:");
        pTTKH.add(lblLoaiKH, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 102, 140, 40));

        lblGiaTien.setText("Giá Tiền:");
        pTTKH.add(lblGiaTien, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 40, 110, -1));

        lblTenKhachHang.setText("Tên khách hàng:");
        pTTKH.add(lblTenKhachHang, new org.netbeans.lib.awtextra.AbsoluteConstraints(38, 70, 140, 32));

        lblSoCCCD.setText("Số CCCD:");
        pTTKH.add(lblSoCCCD, new org.netbeans.lib.awtextra.AbsoluteConstraints(383, 106, 100, 30));

        lblTTSoCCCD.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblTTSoCCCD.setText("jLabel1");
        lblTTSoCCCD.setMaximumSize(new java.awt.Dimension(75, 30));
        lblTTSoCCCD.setPreferredSize(new java.awt.Dimension(75, 30));
        pTTKH.add(lblTTSoCCCD, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 100, 170, 40));

        lblTTTenKH.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblTTTenKH.setText("");
        lblTTTenKH.setMaximumSize(new java.awt.Dimension(75, 30));
        pTTKH.add(lblTTTenKH, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 70, 200, 30));

        lblTTMaHD.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblTTMaHD.setText("jLabel1");
        lblTTMaHD.setMaximumSize(new java.awt.Dimension(75, 30));
        lblTTMaHD.setPreferredSize(new java.awt.Dimension(75, 30));
        pTTKH.add(lblTTMaHD, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 30, 190, -1));

        lblTTLoaiKH.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblTTLoaiKH.setText("");
        lblTTLoaiKH.setMaximumSize(new java.awt.Dimension(75, 30));
        lblTTLoaiKH.setMinimumSize(new java.awt.Dimension(39, 0));
        lblTTLoaiKH.setPreferredSize(new java.awt.Dimension(75, 30));
        pTTKH.add(lblTTLoaiKH, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 100, 150, 40));

        jPanel7.setBackground(new java.awt.Color(227, 227, 227));
        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel7.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblGioTraPhong1.setText("Giờ trả phòng:");
        jPanel7.add(lblGioTraPhong1, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 50, 120, 32));

        jtxtSoLuongN.setText("jTextField2");
        jtxtSoLuongN.setPreferredSize(new java.awt.Dimension(75, 30));
        jtxtSoLuongN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtxtSoLuongNActionPerformed(evt);
            }
        });
        jPanel7.add(jtxtSoLuongN, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 90, 90, 32));

        jtxtNgayTraPhong.setText("jTextField2");
        jtxtNgayTraPhong.setPreferredSize(new java.awt.Dimension(75, 30));
        jtxtNgayTraPhong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtxtNgayTraPhongActionPerformed(evt);
            }
        });
        jPanel7.add(jtxtNgayTraPhong, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 50, 140, 32));

        lblNgayNhanPhong.setText("Ngày nhận phòng:");
        jPanel7.add(lblNgayNhanPhong, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 150, 32));

        jtxtNgayNhanPhong.setText("jTextField2");
        jtxtNgayNhanPhong.setPreferredSize(new java.awt.Dimension(75, 30));
        jtxtNgayNhanPhong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtxtNgayNhanPhongActionPerformed(evt);
            }
        });
        jPanel7.add(jtxtNgayNhanPhong, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 10, 140, 32));

        lblGioNhanPhong1.setText("Giờ nhận phòng:");
        jPanel7.add(lblGioNhanPhong1, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 10, 120, 32));

        jtxtGioNhanPhong.setText("jTextField2");
        jtxtGioNhanPhong.setPreferredSize(new java.awt.Dimension(75, 30));
        jtxtGioNhanPhong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtxtGioNhanPhongActionPerformed(evt);
            }
        });
        jPanel7.add(jtxtGioNhanPhong, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 10, 110, 32));

        lblNgayTraPhong.setText("Ngày trả phòng:");
        jPanel7.add(lblNgayTraPhong, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 150, 32));

        jtxtGioTraPhong.setText("jTextField2");
        jtxtGioTraPhong.setPreferredSize(new java.awt.Dimension(75, 30));
        jtxtGioTraPhong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtxtGioTraPhongActionPerformed(evt);
            }
        });
        jPanel7.add(jtxtGioTraPhong, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 50, 110, 32));

        lblSoLuongNguoi.setText("Số lượng phòng:");
        jPanel7.add(lblSoLuongNguoi, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, 150, 32));

        lblSoGio.setText("Số giờ/ngày:");
        jPanel7.add(lblSoGio, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 90, 100, 32));

        jtxtSoGio.setText("jTextField2");
        jtxtSoGio.setPreferredSize(new java.awt.Dimension(75, 30));
        jtxtSoGio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtxtSoGioActionPerformed(evt);
            }
        });
        jPanel7.add(jtxtSoGio, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 90, 110, 32));

        pTTKH.add(jPanel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 140, 590, 130));

        lblMaHD.setText("Mã hóa đơn:");
        pTTKH.add(lblMaHD, new org.netbeans.lib.awtextra.AbsoluteConstraints(38, 30, 140, 32));

        lblLoaiPhong.setText("Loại phòng:");
        pTTKH.add(lblLoaiPhong, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 80, 110, -1));

        lblTTLoaiP.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblTTLoaiP.setText("jLabel1");
        lblTTLoaiP.setMaximumSize(new java.awt.Dimension(75, 30));
        lblTTLoaiP.setPreferredSize(new java.awt.Dimension(75, 30));
        pTTKH.add(lblTTLoaiP, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 70, 170, -1));

        lblTTGiaTien.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblTTGiaTien.setText("jLabel1");
        lblTTGiaTien.setMaximumSize(new java.awt.Dimension(75, 30));
        lblTTGiaTien.setPreferredSize(new java.awt.Dimension(75, 30));
        pTTKH.add(lblTTGiaTien, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 30, 160, -1));

        pTTKHvsDV.add(pTTKH, java.awt.BorderLayout.NORTH);

        pTTDV.setBackground(new java.awt.Color(227, 227, 227));
        pTTDV.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(""), "Thêm Dịch Vụ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 14))); // NOI18N
        pTTDV.setPreferredSize(new java.awt.Dimension(671, 155));
        pTTDV.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblThemSanPham.setText("Thêm:");
        pTTDV.add(lblThemSanPham, new org.netbeans.lib.awtextra.AbsoluteConstraints(38, 30, 50, 32));

        btnThemSanPham.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/png/add.png"))); // NOI18N
        btnThemSanPham.setToolTipText("");
        btnThemSanPham.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemSanPhamActionPerformed(evt);
            }
        });
        pTTDV.add(btnThemSanPham, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 30, -1, 30));

        lblSoLuongSP.setText("Số lượng:");
        pTTDV.add(lblSoLuongSP, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 30, 80, 32));

        jComboBoxSLSP.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tùy chọn", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10" }));
        pTTDV.add(jComboBoxSLSP, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 30, 140, 30));

        jtableSP.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Tên sản phẩm", "Số lượng", "Thành tiền"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.Double.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrSP.setViewportView(jtableSP);
        if (jtableSP.getColumnModel().getColumnCount() > 0) {
            jtableSP.getColumnModel().getColumn(0).setResizable(false);
            jtableSP.getColumnModel().getColumn(0).setPreferredWidth(120);
            jtableSP.getColumnModel().getColumn(1).setResizable(false);
            jtableSP.getColumnModel().getColumn(1).setPreferredWidth(30);
            jtableSP.getColumnModel().getColumn(2).setResizable(false);
            jtableSP.getColumnModel().getColumn(2).setPreferredWidth(120);
        }

        pTTDV.add(jScrSP, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, 600, 80));

        jComboBoxSP.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nước suối (13.000)", "Nước chanh (20.000)", "Nước dừa (25.000)", "Nước cam (20.000)", "Nước trà (11.000)", "String (18.000)", "Nước soda (13.000)", "Nước ép táo (13.000)", "Nước khoáng (13.000)", "Nước dưa hấu (12.000)", "Nước mật ong (14.000)", "Nước gừng (13.000)", "Nước thảo mộc (12.000)", "Nước bí đao (13.000)", "Nước mía (10.000)", "Snack Poca (25.000)", "Kẹo dẻo (18.000)", "Bánh Oreo (15.000)", "Mì Hảo Hảo (8.000)", "Mì Indomie (15.000)", " " }));
        pTTDV.add(jComboBoxSP, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 30, 190, 30));

        btnXoaSanPham.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/png/remove.png"))); // NOI18N
        btnXoaSanPham.setToolTipText("");
//        btnXoaSanPham.addActionListener(new java.awt.event.ActionListener() {
//            public void actionPerformed(java.awt.event.ActionEvent evt) {
//                btnXoaSanPhamActionPerformed(evt);
//            }
//        });
        pTTDV.add(btnXoaSanPham, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 30, -1, 30));

        pTTKHvsDV.add(pTTDV, java.awt.BorderLayout.SOUTH);

        pCenter.add(pTTKHvsDV, java.awt.BorderLayout.NORTH);

        pThanhToan.setBackground(new java.awt.Color(227, 227, 227));
        pThanhToan.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(""), "Thanh Toán", javax.swing.border.TitledBorder.LEADING, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 14))); // NOI18N
        pThanhToan.setMinimumSize(new java.awt.Dimension(620, 40));
        pThanhToan.setPreferredSize(new java.awt.Dimension(671, 40));
        pThanhToan.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblPhuThu.setText("Phụ thu:");
        pThanhToan.add(lblPhuThu, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, 60, 32));

        jtxtGiaTien.setText("jTextField1");
        jtxtGiaTien.setPreferredSize(new java.awt.Dimension(70, 30));
        jtxtGiaTien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtxtGiaTienActionPerformed(evt);
            }
        });
        pThanhToan.add(jtxtGiaTien, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 30, 130, -1));

        jComboBoxPPT.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tiền Mặt", "Ngân Hàng" }));

        pThanhToan.add(jComboBoxPPT, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 140, 140, 32));

        lblThanhToan.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblThanhToan.setForeground(new java.awt.Color(255, 0, 0));
        lblThanhToan.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/png/cash computer.png"))); // NOI18N
        lblThanhToan.setText("Thanh Toán:");
        pThanhToan.add(lblThanhToan, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 110, 140, 32));

        lblTienTe.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblTienTe.setForeground(new java.awt.Color(255, 0, 51));
        lblTienTe.setText("VNĐ");
        pThanhToan.add(lblTienTe, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 110, -1, 30));

        lblPhuongThucTra.setText("Phương thức trả:");
        pThanhToan.add(lblPhuongThucTra, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 140, 120, 30));

        lblTTThanhToan.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblTTThanhToan.setText("20.000.000");
        lblTTThanhToan.setMaximumSize(new java.awt.Dimension(75, 30));
        lblTTThanhToan.setPreferredSize(new java.awt.Dimension(75, 30));
        pThanhToan.add(lblTTThanhToan, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 110, 90, -1));

        lblGhiChu.setText("ghi chú:");
        pThanhToan.add(lblGhiChu, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 70, 60, 32));

        jTextAreaGhiChu.setColumns(20);
        jTextAreaGhiChu.setRows(5);
        jScrollPane1.setViewportView(jTextAreaGhiChu);

        pThanhToan.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 70, 240, 60));

        lblTraTruoc.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblTraTruoc.setForeground(new java.awt.Color(255, 0, 0));
        lblTraTruoc.setText("Trả Trước:");
        pThanhToan.add(lblTraTruoc, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 70, 100, 32));

        lblTTTraTruoc.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblTTTraTruoc.setText("20.000.000");
        lblTTTraTruoc.setMaximumSize(new java.awt.Dimension(75, 30));
        lblTTTraTruoc.setPreferredSize(new java.awt.Dimension(75, 30));
        pThanhToan.add(lblTTTraTruoc, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 70, 90, -1));

        lblTienTe1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblTienTe1.setForeground(new java.awt.Color(255, 0, 51));
        lblTienTe1.setText("VNĐ");
        pThanhToan.add(lblTienTe1, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 70, -1, 30));

        lblTongTien.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblTongTien.setForeground(new java.awt.Color(255, 0, 0));
        lblTongTien.setText("Tổng tiền:");
        pThanhToan.add(lblTongTien, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 30, 100, 32));

        lblTTTongTien.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblTTTongTien.setText("20.000.000");
        lblTTTongTien.setMaximumSize(new java.awt.Dimension(75, 30));
        lblTTTongTien.setPreferredSize(new java.awt.Dimension(75, 30));
        pThanhToan.add(lblTTTongTien, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 30, 90, -1));

        lblTienTe2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblTienTe2.setForeground(new java.awt.Color(255, 0, 51));
        lblTienTe2.setText("VNĐ");
        pThanhToan.add(lblTienTe2, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 30, -1, 30));

        pCenter.add(pThanhToan, java.awt.BorderLayout.CENTER);

        pSouth.setBackground(new java.awt.Color(227, 227, 227));
        pSouth.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        boxButton.setBackground(new java.awt.Color(227, 227, 227));

        btnTraPhong.setText("In hoá đơn");
        btnTraPhong.setkHoverForeGround(new java.awt.Color(204, 255, 204));
        btnTraPhong.setkHoverStartColor(new java.awt.Color(102, 255, 102));
        btnTraPhong.setkSelectedColor(new java.awt.Color(0, 255, 51));
        btnTraPhong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInActionPerformed(evt);
            }
        });

        btnHuyBo.setText("Hủy bỏ");
        btnHuyBo.setkEndColor(new java.awt.Color(255, 255, 0));
        btnHuyBo.setkHoverEndColor(new java.awt.Color(255, 204, 0));
        btnHuyBo.setkHoverForeGround(new java.awt.Color(255, 102, 102));
        btnHuyBo.setkHoverStartColor(new java.awt.Color(255, 51, 51));
        btnHuyBo.setkSelectedColor(new java.awt.Color(255, 51, 0));
        btnHuyBo.setkStartColor(new java.awt.Color(255, 51, 51));
        btnHuyBo.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
          btnHuyActionPerformed(evt);
      }
  });

        javax.swing.GroupLayout boxButtonLayout = new javax.swing.GroupLayout(boxButton);
        boxButton.setLayout(boxButtonLayout);
        boxButtonLayout.setHorizontalGroup(
            boxButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, boxButtonLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(btnHuyBo, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                .addComponent(btnTraPhong, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        boxButtonLayout.setVerticalGroup(
            boxButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(boxButtonLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(boxButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnHuyBo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnTraPhong, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pSouth.add(boxButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 0, 290, 60));

        jComboInHoaDon.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Không chọn", "Chọn" }));
        jComboInHoaDon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboInHoaDonActionPerformed(evt);
            }
        });
        pSouth.add(jComboInHoaDon, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 10, -1, 30));

        lblKieuIn.setBackground(new java.awt.Color(204, 204, 204));
        lblKieuIn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblKieuIn.setForeground(new java.awt.Color(255, 51, 0));
        lblKieuIn.setText("Print:");
        pSouth.add(lblKieuIn, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 50, 30));

        lblNgayLapHoaDon.setText("Ngày lập:");
        pSouth.add(lblNgayLapHoaDon, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 10, 70, 32));

        jtxtNgayLapHoaDon.setText("jTextField2");
        jtxtNgayLapHoaDon.setPreferredSize(new java.awt.Dimension(75, 30));
//        jtxtNgayLapHoaDon.addActionListener(new java.awt.event.ActionListener() {
//            public void actionPerformed(java.awt.event.ActionEvent evt) {
//                jtxtNgayLapHoaDonActionPerformed(evt);
//            }
//        });
        pSouth.add(jtxtNgayLapHoaDon, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 10, 110, 32));

        pCenter.add(pSouth, java.awt.BorderLayout.SOUTH);

        jPanel2.add(pCenter, java.awt.BorderLayout.CENTER);

        add(jPanel2, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void jtxtSoLuongNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtxtSoLuongNActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtxtSoLuongNActionPerformed

    private void jtxtNgayTraPhongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtxtNgayTraPhongActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtxtNgayTraPhongActionPerformed

    private void jtxtNgayNhanPhongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtxtNgayNhanPhongActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtxtNgayNhanPhongActionPerformed

    private void jtxtGioNhanPhongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtxtGioNhanPhongActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtxtGioNhanPhongActionPerformed

    private void jtxtGioTraPhongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtxtGioTraPhongActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtxtGioTraPhongActionPerformed

    private void jtxtSoGioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtxtSoGioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtxtSoGioActionPerformed

    private void btnThemSanPhamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemSanPhamActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnThemSanPhamActionPerformed

    private void jtxtGiaTienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtxtGiaTienActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtxtGiaTienActionPerformed

    private void jtxtTraTruocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtxtTraTruocActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtxtTraTruocActionPerformed

    private void jtxtGiamTruActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtxtGiamTruActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtxtGiamTruActionPerformed




    private void jComboInHoaDonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboInHoaDonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboInHoaDonActionPerformed
    private void btnHuyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInActionPerformed
       dispose();
    }//GEN-LAST:event_btnInActionPerformed
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormThongTinHoaDon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormThongTinHoaDon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormThongTinHoaDon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormThongTinHoaDon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormThongTinHoaDon().setVisible(true);
            }
        });
    }
    private void btnInActionPerformed(java.awt.event.ActionEvent evt) {
        try {
            // 1) Nếu chưa load data thì load
            if (thongTin == null || danhSachDichVu == null) {
                String maHoaDon = lblTTMaHD.getText();
                thongTin = loadThongTinHoaDon(maHoaDon);
                hienThiThongTinHoaDon(thongTin);
                danhSachDichVu = loadDichVuHoaDon(maHoaDon);
                hienThiThongTinDichVu(danhSachDichVu);
            }

            // 2) Kiểm tra data
            if (thongTin == null || danhSachDichVu == null) {
                JOptionPane.showMessageDialog(this,
                        "Không thể in hóa đơn vì dữ liệu bị thiếu",
                        "Lỗi", JOptionPane.ERROR_MESSAGE);
                return;
            }

            // 3) Tạo thư mục nếu chưa có
            Path outDir = Paths.get("file");
            if (!Files.exists(outDir)) {
                Files.createDirectories(outDir);
            }

            // 4) Ghi đè file hoadon.pdf cố định
            Path pdfPath = outDir.resolve("hoadon.pdf");

            // 5) Xuất PDF vào đúng file cố định
            exportInvoiceToPDF(thongTin, danhSachDichVu, pdfPath.toString());

            // 6) Mở file PDF vừa tạo
            if (Desktop.isDesktopSupported()) {
                Desktop.getDesktop().open(pdfPath.toFile());
            }

            // 7) Hiển thị bản xem trước in
            printPreview();

        } catch (IOException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this,
                    "Lỗi I/O khi xuất hoặc mở PDF:\n" + ex.getMessage(),
                    "Lỗi", JOptionPane.ERROR_MESSAGE);
        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this,
                    "Đã xảy ra lỗi:\n" + ex.getMessage(),
                    "Lỗi", JOptionPane.ERROR_MESSAGE);
        }
    }



    public void hienThiThongTinHoaDon(Map<String, Object> thongTin) {
        // Kiểm tra các giá trị từ thongTin
        System.out.println("Thong tin hoa don: " + thongTin);

        lblTTMaHD.setText((String) thongTin.get("maHoaDon"));
        lblTTTenKH.setText((String) thongTin.get("tenKhachHang"));

        Object loaiKH = thongTin.get("loaiKhachHang");
        if (loaiKH instanceof Boolean) {
            boolean isVip = (Boolean) loaiKH;
            if (isVip) {
                lblTTLoaiKH.setText("VIP");
            } else {
                lblTTLoaiKH.setText("Vãng lai");
            }
        } else if (loaiKH instanceof String) {
            String loaiKhachHang = (String) loaiKH;
            if ("1".equals(loaiKhachHang)) {
                lblTTLoaiKH.setText("Vãng lai");
            } else if ("0".equals(loaiKhachHang)) {
                lblTTLoaiKH.setText("VIP");
            }
        }


        // Lấy dữ liệu cccd và kiểm tra null
        String cccd = (String) thongTin.get("cccd");
        if (cccd == null) {
            cccd = "Chưa cập nhật"; // Hoặc giá trị mặc định
        }
        lblTTSoCCCD.setText(cccd);

        // Lấy dữ liệu loaiPhong và kiểm tra null trước khi dùng switch
        String loaiPhong = (String) thongTin.get("loaiPhong");
        if (loaiPhong == null) {
            loaiPhong = "default"; // gán mặc định
        }

        switch (loaiPhong) {
            case "MOT_GIUONG_DON":
                lblTTLoaiP.setText("Một giường đơn");
                break;
            case "HAI_GIUONG_DON":
                lblTTLoaiP.setText("Hai giường đơn");
                break;
            case "MOT_DON_MOT_DOI":
                lblTTLoaiP.setText("Một đơn Một đôi");
                break;
            case "MOT_GIUONG_DOI":
                lblTTLoaiP.setText("Một giường đôi");
                break;
            default:
                lblTTLoaiP.setText("Không xác định");
                break;
        }

        // Kiểm tra giaPhong và định dạng lại
        Object giaPhongObj = thongTin.get("giaPhong");
        if (giaPhongObj instanceof Double) {
            Double giaPhong = (Double) giaPhongObj;
            DecimalFormat df = new DecimalFormat("###,###,###");
            lblTTGiaTien.setText(df.format(giaPhong));
        } else {
            lblTTGiaTien.setText("Không có thông tin");  // hoặc giá trị mặc định
        }

        // Kiểm tra ngayNhanPhong, ngayTraPhong, gioNhanPhong, gioTraPhong
        jtxtNgayNhanPhong.setText(String.valueOf(thongTin.get("ngayNhanPhong")));
        jtxtNgayTraPhong.setText(String.valueOf(thongTin.get("ngayTraPhong")));
        jtxtGioNhanPhong.setText(String.valueOf(thongTin.get("gioNhanPhong")));
        jtxtGioTraPhong.setText(String.valueOf(thongTin.get("gioTraPhong")));
        jtxtSoGio.setText(String.valueOf(thongTin.get("soGio")));

        // Kiểm tra soLuongPhongDat
        jtxtSoLuongN.setText(String.valueOf(thongTin.get("soLuongPhongDat")));

        // Kiểm tra tongPhuThu
        jtxtGiaTien.setText(String.valueOf(thongTin.get("tongPhuThu")));

        // Kiểm tra traTruoc
        Object traTruocObj = thongTin.get("traTruoc");
        if (traTruocObj instanceof Double) {
            Double traTruoc = (Double) traTruocObj;
            DecimalFormat df = new DecimalFormat("###,###,###");
            lblTTTraTruoc.setText(df.format(traTruoc));
        } else {
            lblTTTraTruoc.setText("Không có thông tin");
        }

        // Kiểm tra tongTienPhaiTra
        Object tongTienPhaiTraObj = thongTin.get("tongTienPhaiTra");
        if (tongTienPhaiTraObj instanceof Double) {
            Double tongTienPhaiTra = (Double) tongTienPhaiTraObj;
            DecimalFormat df = new DecimalFormat("###,###,###");
            lblTTThanhToan.setText(df.format(tongTienPhaiTra));
        } else {
            lblTTThanhToan.setText("Không có thông tin");
        }

        jTextAreaGhiChu.setText((String) thongTin.get("ghiChu"));
        jtxtNgayLapHoaDon.setText(String.valueOf(thongTin.get("ngayTraPhong")));

        // Tính tổng tiền:
        Double tongTien = 0.0;
        if (tongTienPhaiTraObj instanceof Double && traTruocObj instanceof Double) {
            tongTien = (Double) tongTienPhaiTraObj + (Double) traTruocObj;
        }
        lblTTTongTien.setText(new DecimalFormat("###,###,###").format(tongTien));
    }


    public void hienThiThongTinDichVu(List<Map<String, Object>> danhSachDichVu) {
        DefaultTableModel model = (DefaultTableModel) jtableSP.getModel();
        model.setRowCount(0); // Xóa các hàng cũ

        for (Map<String, Object> dichVu : danhSachDichVu) {
            Object[] row = {
                dichVu.get("tenSanPham"),
                dichVu.get("soLuong"),
                dichVu.get("tongGiaBan")
            };
            model.addRow(row);
        }
    }

    public void loadData(String maHoaDon) {
        try {
            // Load thông tin hóa đơn
            Map<String, Object> thongTin = loadThongTinHoaDon(maHoaDon);
            hienThiThongTinHoaDon(thongTin); // Đảm bảo bạn đã có hàm hienThiThongTinHoaDon để hiển thị

            // Load dịch vụ liên quan
            List<Map<String, Object>> danhSachDichVu = loadDichVuHoaDon(maHoaDon);
            hienThiThongTinDichVu(danhSachDichVu); // Đảm bảo bạn đã có hàm hienThiThongTinDichVu để hiển thị

        } catch (RemoteException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Lỗi khi tải dữ liệu", "Lỗi", JOptionPane.ERROR_MESSAGE);
        }
    }

    
    private Map<String, Object> loadThongTinHoaDon(String maHoaDon) {
        // Giả sử HoaDon_DAO là đối tượng DAO của bạn

        return rmiClient.loadThongTinHoaDon(maHoaDon);
    }

    private List<Map<String, Object>> loadDichVuHoaDon(String maHoaDon) throws RemoteException {
        // Giả sử HoaDon_DAO là đối tượng DAO của bạn

        return rmiClient.loadDichVuHoaDon(maHoaDon);
    }
 
    public void exportInvoiceToPDF(Map<String, Object> thongTin, List<Map<String, Object>> danhSachDichVu, String filePath) {
        Document document = new Document();
        try {
            PdfWriter writer = PdfWriter.getInstance(document, new FileOutputStream(filePath));
            writer.setPageEvent(new PdfPageEventHelper() {
                public void onEndPage(PdfWriter writer, Document document) {
                    PdfContentByte cb = writer.getDirectContent();
                    ColumnText.showTextAligned(cb, Element.ALIGN_RIGHT,
                            new Phrase("Trang " + document.getPageNumber()), 
                            document.right() - 10, document.bottom() - 20, 0);
                }
            });

            document.open();

            // Định dạng font hỗ trợ tiếng Việt
            BaseFont bf = BaseFont.createFont("font/CAMBRIAZ.ttf", BaseFont.IDENTITY_H, BaseFont.EMBEDDED);
            Font fontTitle = new Font(bf, 18, Font.BOLD);
            Font fontBold = new Font(bf, 14, Font.BOLD);
            Font fontNormal = new Font(bf, 14);

            // Thêm tiêu đề
            String maPhong = (String) thongTin.get("maPhong");
            Paragraph tittle = new Paragraph("HOÁ ĐƠN ", fontTitle);
            tittle.setAlignment(Element.ALIGN_CENTER);
            document.add(tittle);

            // Thêm tên khách sạn
            Paragraph tenKS = new Paragraph("The Moon Hotel 2", fontBold);
            tenKS.setAlignment(Element.ALIGN_LEFT);
            document.add(tenKS);

            Paragraph diaChi = new Paragraph("Địa chỉ : 245 Đường Số 1, Quận Bình Tân, TP. Hồ Chí Minh", fontNormal);
            diaChi.setAlignment(Element.ALIGN_LEFT);
            document.add(diaChi);
            
            Paragraph tenKS1 = new Paragraph("themoonhotel2.com.vn", fontBold);
            tenKS1.setAlignment(Element.ALIGN_LEFT);
            document.add(tenKS1);

            Paragraph sdt = new Paragraph("SĐT: 028.36363.903", fontNormal);
            sdt.setAlignment(Element.ALIGN_LEFT);
            document.add(sdt);
            
            document.add(new Paragraph("Tên nhân viên: " + thongTin.get("hoTenNhanVien"), fontNormal));

            document.add(new Paragraph(" ")); // Dòng trống
            document.add(new Paragraph("-------------------------------------------- "));

            // Chuyển đổi giá trị ngày tháng và giờ thành chuỗi
            SimpleDateFormat dateFormat = new SimpleDateFormat("dd-MM-yyyy");
            SimpleDateFormat timeFormat = new SimpleDateFormat("HH:mm:ss");

            String ngayNhanPhong = dateFormat.format((Date) thongTin.get("ngayNhanPhong"));
            String ngayTraPhong = dateFormat.format((Date) thongTin.get("ngayTraPhong"));
            String gioNhanPhong = timeFormat.format((Time) thongTin.get("gioNhanPhong"));
            String gioTraPhong = timeFormat.format((Time) thongTin.get("gioTraPhong"));

            // Thêm thông tin hóa đơn chia làm 2 cột, 6 dòng

            Boolean loaiKhachHang = (Boolean) thongTin.get("loaiKhachHang");
            String loaiKhachHangStr;
            if (Boolean.TRUE.equals(loaiKhachHang)) {
                loaiKhachHangStr = "VIP";
            } else if (Boolean.FALSE.equals(loaiKhachHang)) {
                loaiKhachHangStr = "Vãng lai";
            } else {
                loaiKhachHangStr = "Không xác định";
            }


            // Chuyển đổi loại phòng
            String loaiPhong = (String) thongTin.get("loaiPhong");
            String loaiPhongStr;
            switch (loaiPhong) {
                case "1":
                    loaiPhongStr = "Một giường đơn";
                    break;
                case "2":
                    loaiPhongStr = "Hai giường đơn";
                    break;
                case "3":
                    loaiPhongStr = "Một đơn Một đôi";
                    break;
                case "4":
                    loaiPhongStr = "Một giường đôi";
                    break;
                default:
                    loaiPhongStr = "Không xác định";
                    break;
            }

            DecimalFormat df = new DecimalFormat("###,###,###");

// Chuyển giá trị kiểu Object về đúng kiểu an toàn
            Double giaPhong = thongTin.get("giaPhong") instanceof Long
                    ? ((Long) thongTin.get("giaPhong")).doubleValue()
                    : (Double) thongTin.get("giaPhong");

// Vì có thể kiểu trong Map là Long, nên dùng Number rồi ép sang int
            Number soLuongPhongDatNum = (Number) thongTin.get("soLuongPhongDat");
            int soLuongP = soLuongPhongDatNum.intValue();


            // Thêm thông tin hóa đơn chia làm 2 cột, 6 dòng
            PdfPTable infoTable = new PdfPTable(2);
            infoTable.setWidthPercentage(100);
            infoTable.setSpacingBefore(10f);
            infoTable.setSpacingAfter(10f);
            infoTable.getDefaultCell().setBorder(Rectangle.NO_BORDER);

            // Thêm các ô vào bảng không có viền
            addInvoiceCell(infoTable, "Mã hóa đơn: " + thongTin.get("maHoaDon"), fontNormal);
//            addInvoiceCell(infoTable, "Tên nhân viên: " + thongTin.get("hoTenNhanVien"), fontNormal);
            addInvoiceCell(infoTable, "Tên khách hàng: " + thongTin.get("tenKhachHang"), fontNormal);
            addInvoiceCell(infoTable, "Loại khách hàng: " + loaiKhachHangStr, fontNormal);
            addInvoiceCell(infoTable, "Ngày nhận phòng: " + ngayNhanPhong, fontNormal);
            addInvoiceCell(infoTable, "Ngày trả phòng: " + ngayTraPhong, fontNormal);
            addInvoiceCell(infoTable, "Giờ nhận phòng: " + gioNhanPhong, fontNormal);
            addInvoiceCell(infoTable, "Giờ trả phòng: " + gioTraPhong, fontNormal);
            addInvoiceCell(infoTable, "Số lượng người: " + thongTin.get("soLuongNguoi"), fontNormal);
            addInvoiceCell(infoTable, "Số giờ thuê: " + thongTin.get("soGio"), fontNormal);
            addInvoiceCell(infoTable, "Loại phòng: " + loaiPhongStr, fontNormal);
            addInvoiceCell(infoTable, "Giá phòng: " + df.format(giaPhong) + " VNĐ", fontNormal);
            addInvoiceCell(infoTable, "Số lượng phòng: " + soLuongP, fontNormal);
            addInvoiceCell(infoTable, "Phụ thu: " + thongTin.get("tongPhuThu"), fontNormal);
            addInvoiceCell(infoTable, "Ghi chú: " + thongTin.get("ghiChu"), fontNormal);

            document.add(infoTable);
            
         // Tính toán tiền thuê phòng dựa trên công thức
            double soGio = thongTin.get("soGio") instanceof Integer ? ((Integer) thongTin.get("soGio")).doubleValue() : (Double) thongTin.get("soGio");
            Date ngayNhan = (Date) thongTin.get("ngayNhanPhong");
            Date ngayTra = (Date) thongTin.get("ngayTraPhong");

           
//            double soNgay = Math.ceil(soGio / 24); // Quy đổi giờ ra ngày và làm tròn lên
//            double giaPhongNgay = 0;
//            switch (loaiPhong) {
//                case "1":
//                    giaPhongNgay = 2400000;
//                    break;
//                case "2":
//                    giaPhongNgay = 4200000;
//                    break;
//                case "3":
//                    giaPhongNgay = 6000000;
//                    break;
//                case "4":
//                    giaPhongNgay = 3600000;
//                    break;
//                default:
//                    giaPhongNgay = giaPhong; // Dự phòng, sử dụng giá phòng theo giờ nếu không xác định được loại phòng
//                    break;
//            }
//           
//            double tienThuePhong = soGio <= 1 ? giaPhong * soGio  :
//                                   soGio <= 2 ? giaPhong * soGio * 0.8  :
//                                   soGio <= 3 ? giaPhong * soGio * 0.7  :
//                                   soGio <= 12 ? giaPhong * soGio * 0.6 :
//                            	   giaPhongNgay * soNgay ;
            double tienThuePhong = (double) thongTin.get("tongTienThuePhong");
            double tienThuePhongChuaThue = tienThuePhong / 1.08;
            
        
            document.add(new Paragraph("--------------------------------- ")); // Dòng trống
            String tienThuePhongStr = df.format(tienThuePhongChuaThue);
         // Sử dụng tab set để định nghĩa khoảng cách giữa các phần tử
            PdfContentByte canvas = writer.getDirectContent();
            Phrase phrase1 = new Phrase();
            phrase1.setTabSettings(new TabSettings(100f)); // Đặt khoảng cách tab (56f là khoảng cách giữa các tab)

            // Thêm nội dung vào Phrase
            phrase1.add(new Chunk("Tiền phòng chưa thuế: " + tienThuePhongStr + " VNĐ", fontNormal));
            phrase1.add(Chunk.TABBING); // Thêm tab
            phrase1.add(new Chunk("Thuế: 8%", fontNormal));

            // Thêm Phrase vào document
            document.add(phrase1);

           

            String tongTienThueP= df.format(tienThuePhong);
            document.add(new Paragraph("Tiền thuê phòng: " + tongTienThueP + " VNĐ", fontBold));
           
           
            document.add(new Paragraph(" ")); // Dòng trống

            // Phần dịch vụ
            Paragraph bangDichVu = new Paragraph("Dịch vụ", fontBold);
            document.add(new Paragraph(" ")); // Dòng trống
            bangDichVu.setAlignment(Element.ALIGN_LEFT);
            document.add(bangDichVu);

           

         // Tạo bảng dịch vụ
            PdfPTable table = new PdfPTable(4);
            table.setWidthPercentage(100);
            table.setWidths(new int[]{3, 1, 2, 2}); // Sửa lại để có 4 giá trị tương ứng với 4 cột

            PdfPCell cell;

            // Header của bảng
            cell = new PdfPCell(new Phrase("Tên sản phẩm", fontBold));
            cell.setHorizontalAlignment(Element.ALIGN_CENTER);
            table.addCell(cell);

            cell = new PdfPCell(new Phrase("Số lượng", fontBold));
            cell.setHorizontalAlignment(Element.ALIGN_CENTER);
            table.addCell(cell);

            cell = new PdfPCell(new Phrase("Đơn giá", fontBold));
            cell.setHorizontalAlignment(Element.ALIGN_CENTER);
            table.addCell(cell);

            cell = new PdfPCell(new Phrase("Tổng", fontBold));
            cell.setHorizontalAlignment(Element.ALIGN_CENTER);
            table.addCell(cell);

            // Nội dung của bảng
            for (Map<String, Object> dichVu : danhSachDichVu) {
                table.addCell(new PdfPCell(new Phrase((String) dichVu.get("tenSanPham"), fontNormal)));
                table.addCell(new PdfPCell(new Phrase(String.valueOf(dichVu.get("soLuong")), fontNormal)));
                table.addCell(new PdfPCell(new Phrase(df.format(dichVu.get("giaBan")), fontNormal)));
                table.addCell(new PdfPCell(new Phrase(df.format(dichVu.get("tongGiaBan")), fontNormal)));
            }

            document.add(table);


			double tongGiaBan = (double) thongTin.get("tongTienDichVu");
			double phuThu = (double) thongTin.get("tongPhuThu");
			double tongTienPhaiTra= (double) thongTin.get("tongTienPhaiTra");
			double traTruoc= (double) thongTin.get("traTruoc");
			
			document.add(new Paragraph("Tổng tiền dịch vụ và phụ thu : " + df.format(thongTin.get("tongTienDichVu")) + 
			        "+" + df.format(thongTin.get("tongPhuThu")) 
			        + "=" + df.format(tongGiaBan + phuThu) + " VNĐ", fontBold));
			
			document.add(new Paragraph("Tổng tiền: " + df.format(tongTienPhaiTra+traTruoc) + " VNĐ", fontNormal));
			document.add(new Paragraph("Trả trước: " + df.format(thongTin.get("traTruoc")) + " VNĐ", fontNormal));
			document.add(new Paragraph("Thành tiền: " + df.format(thongTin.get("tongTienPhaiTra")) + " VNĐ", fontBold));
			
			// Kiểm tra khoảng trống trên trang hiện tại
			if (writer.getVerticalPosition(true) < 50) {
			    document.newPage();
			}


            
            document.add(new Paragraph(" ")); // Dòng trống
            document.add(new Paragraph("-------------------------------------------- "));
            document.add(new Paragraph("Chữ ký nhân viên                              			Chữ ký khách hàng", fontNormal));
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            document.close();
        }
    }

    private void addInvoiceCell(PdfPTable table, String text, Font font) {
        PdfPCell cell = new PdfPCell(new Phrase(text, font));
        cell.setBorder(Rectangle.NO_BORDER);
        table.addCell(cell);
    }


   


    public void printPreview() {
        PrinterJob printerJob = PrinterJob.getPrinterJob();
        printerJob.setPrintable(new Printable() {
            @Override
            public int print(Graphics graphics, PageFormat pageFormat, int pageIndex) throws PrinterException {
                if (pageIndex > 0) {
                    return NO_SUCH_PAGE;
                }
                Graphics2D g2d = (Graphics2D) graphics;
                g2d.translate(pageFormat.getImageableX(), pageFormat.getImageableY());

                // Gọi phương thức vẽ nội dung hóa đơn lên PDF
                drawInvoiceContent(g2d);
                
                return PAGE_EXISTS;
            }
        });

        boolean doPrint = printerJob.printDialog();
        if (doPrint) {
            try {
                printerJob.print();
            } catch (PrinterException e) {
                e.printStackTrace();
            }
        }
    }
    private void drawInvoiceContent(Graphics2D g2d) {
        // Vẽ các thông tin hóa đơn lên g2d như trong PDF
        // Ví dụ: g2d.drawString("Mã hóa đơn: " + thongTin.get("maHoaDon"), 100, 100);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel boxButton;
    private com.k33ptoo.components.KButton btnHuyBo;
    private com.raven.datechooser.Button btnThemSanPham;
    private com.k33ptoo.components.KButton btnTraPhong;
    private com.raven.datechooser.Button btnXoaSanPham;
    private javax.swing.ButtonGroup buttonGroupGT;
    private javax.swing.JComboBox<String> jComboBoxPPT;
    private javax.swing.JComboBox<String> jComboBoxSLSP;
    private javax.swing.JComboBox<String> jComboBoxSP;
    private javax.swing.JComboBox<String> jComboInHoaDon;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JScrollPane jScrSP;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextAreaGhiChu;
    private javax.swing.JTable jtableSP;
    private javax.swing.JTextField jtxtGiaTien;
    private javax.swing.JTextField jtxtGioNhanPhong;
    private javax.swing.JTextField jtxtGioTraPhong;
    private javax.swing.JTextField jtxtNgayLapHoaDon;
    private javax.swing.JTextField jtxtNgayNhanPhong;
    private javax.swing.JTextField jtxtNgayTraPhong;
    private javax.swing.JTextField jtxtSoGio;
    private javax.swing.JTextField jtxtSoLuongN;
    private javax.swing.JLabel lblGhiChu;
    private javax.swing.JLabel lblGiaTien;
    private javax.swing.JLabel lblGioNhanPhong1;
    private javax.swing.JLabel lblGioTraPhong1;
    private javax.swing.JLabel lblKieuIn;
    private javax.swing.JLabel lblLoaiKH;
    private javax.swing.JLabel lblLoaiPhong;
    private javax.swing.JLabel lblMaHD;
    private javax.swing.JLabel lblNgayLapHoaDon;
    private javax.swing.JLabel lblNgayNhanPhong;
    private javax.swing.JLabel lblNgayTraPhong;
    private javax.swing.JLabel lblPhuThu;
    private javax.swing.JLabel lblPhuongThucTra;
    private javax.swing.JLabel lblSoCCCD;
    private javax.swing.JLabel lblSoGio;
    private javax.swing.JLabel lblSoLuongNguoi;
    private javax.swing.JLabel lblSoLuongSP;
    private javax.swing.JLabel lblTTGiaTien;
    private javax.swing.JLabel lblTTLoaiKH;
    private javax.swing.JLabel lblTTLoaiP;
    private javax.swing.JLabel lblTTMaHD;
    private javax.swing.JLabel lblTTSoCCCD;
    private javax.swing.JLabel lblTTTenKH;
    private javax.swing.JLabel lblTTThanhToan;
    private javax.swing.JLabel lblTTTongTien;
    private javax.swing.JLabel lblTTTraTruoc;
    private javax.swing.JLabel lblTenKhachHang;
    private javax.swing.JLabel lblThanhToan;
    private javax.swing.JLabel lblThemSanPham;
    private javax.swing.JLabel lblTienTe;
    private javax.swing.JLabel lblTienTe1;
    private javax.swing.JLabel lblTienTe2;
    private javax.swing.JLabel lblTongTien;
    private javax.swing.JLabel lblTraTruoc;
    private javax.swing.JPanel pCenter;
    private javax.swing.JPanel pSouth;
    private javax.swing.JPanel pTTDV;
    private javax.swing.JPanel pTTKH;
    private javax.swing.JPanel pTTKHvsDV;
    private javax.swing.JPanel pThanhToan;
    // End of variables declaration//GEN-END:variables
}
